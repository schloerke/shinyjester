{"version":3,"sources":["globals.ts","methods/selectize.ts","methods/assert.ts","methods/shiny.ts","methods/button.ts","methods/radio.ts","methods/download.ts","methods/checkbox.ts","methods/image.ts","methods/unicode.ts","methods/input.ts","methods/index.ts","jster.ts","shiny.ts","index.ts"],"names":[],"mappings":"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","file":"shinyjster.js","sourceRoot":"../../../srcjs","sourcesContent":["import { Jster, jster } from \"./jster\";\n\ninterface ShinyType {\n  setInputValue: (key: string, value: string | Record<string, unknown>) => void;\n  addCustomMessageHandler: (\n    key: string,\n    fn: (val?: string | number) => void\n  ) => void;\n}\n\ndeclare global {\n  interface Window {\n    Shiny: ShinyType;\n    jQuery: JQueryStatic;\n    Jster: typeof Jster; // eslint-disable-line no-undef\n    jster: (timeout: number) => void;\n  }\n}\n\nconst Shiny: ShinyType = window.Shiny;\n\nconst jQuery: JQueryStatic = window.jQuery;\n\nexport { Shiny, jQuery, jQuery as $ };\n","import { $ } from \"../globals\";\n\n// simulate user click\nfunction click(id: string) {\n  $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-input\")\n    .click();\n}\n\nfunction options(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-dropdown-content\")\n    .children();\n}\n\nfunction clickOption(id: string, idx: number) {\n  const opt = options(id).get(idx);\n\n  if ($(opt).hasClass(\"optgroup\")) {\n    $(opt)\n      .find(\".option\")\n      .click();\n  } else {\n    opt.click();\n  }\n}\n\nfunction currentOption(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-input\")\n    .text();\n}\n\n// When using serverside selectize, only the first 1000 values are sent.\nfunction values(id: string) {\n  return options(id)\n    .map(function() {\n      const selectInfo: { label: string; value: string; group?: string } = {\n        label: \"\",\n        value: \"\",\n      };\n      const jthis = $(this);\n\n      if (jthis.hasClass(\"optgroup\")) {\n        selectInfo.group = jthis.find(\".optgroup-header\").text();\n        selectInfo.label = jthis.find(\".option\").text();\n        selectInfo.value = $(jthis.find(\".option\").get(0)).attr(\"data-value\");\n      } else {\n        selectInfo.label = jthis.text();\n        selectInfo.value = jthis.attr(\"data-value\");\n      }\n      return selectInfo;\n    })\n    .get();\n}\n\nfunction label(id: string) {\n  return $(`label[for=\"${id}-selectized\"]`)\n    .text()\n    .trim();\n}\n\nexport { click, values, options, clickOption, currentOption, label };\n","function prettyJSON(x: any) {\n  return JSON.stringify(x, null, \"  \");\n}\n\nfunction isEqual(x: any, y: any) {\n  const xStr = prettyJSON(x);\n  const yStr = prettyJSON(y);\n\n  if (xStr !== yStr) {\n    console.log(\"x:\", x);\n    console.log(\"y:\", y);\n    throw \"x does not equal y\";\n  }\n  return true;\n}\n\nfunction isTrue(x: any) {\n  return isEqual(x, true);\n}\n\nfunction isFalse(x: any) {\n  return isEqual(x, false);\n}\n\nfunction isFunction(fn: any) {\n  if (typeof fn !== \"function\") {\n    console.log(\"fn: \", fn);\n    throw \"fn is not a function\";\n  }\n}\n\nexport { isEqual, isTrue, isFalse, prettyJSON, isFunction };\n","import { $ } from \"../globals\";\n\nlet shinyIsIdle = false;\n\nfunction isIdle(): boolean {\n  return shinyIsIdle;\n}\nfunction isBusy(): boolean {\n  return !shinyIsIdle;\n}\nif ($) {\n  $(document).on(\"shiny:busy\", function(event) {\n    shinyIsIdle = false;\n  });\n  $(document).on(\"shiny:idle\", function(event) {\n    shinyIsIdle = true;\n  });\n}\n\n// `waitUntilIdleFor` requires a timeout value\n// `waitUntilIdleFor` is interpreted as \"Shiny must be in the 'idle' state for at least `timeout`ms\"\n// If shiny decides to become 'idle', but becomes 'busy' before `timeout`ms...\n//   `callback` will have to wait until the next time Shiny is 'idle' before attempting to wait to execute\n// Once a callback is successful, all created event handlers are removed to avoid buildup of no-op handlers\nfunction waitUntilIdleFor(timeout) {\n  return function(callback) {\n    let timeoutId = null;\n\n    const busyFn = function() {\n      // clear timeout. Calling with `null` is ok.\n      clearTimeout(timeoutId);\n    };\n    const idleFn = function() {\n      const fn = function() {\n        // made it through the timeout, remove event listeners\n        $(document).off(\"shiny:busy\", busyFn);\n        $(document).off(\"shiny:idle\", idleFn);\n\n        // call original callback\n        callback();\n      };\n\n      // delay the callback wrapper function\n      timeoutId = setTimeout(fn, timeout);\n    };\n\n    // set up individual listeners for this function.\n    $(document).on(\"shiny:busy\", busyFn);\n    $(document).on(\"shiny:idle\", idleFn);\n\n    // if already idle, call `idleFn`.\n    if (shinyIsIdle) {\n      idleFn();\n    }\n  };\n}\n// `waitUntilIdle` will fire a callback once shiny is idle.\n//  If shiny is already idle, the callback will be executed on the next tick.\nfunction waitUntilIdle(callback) {\n  waitUntilIdleFor(0)(callback);\n}\n// `waitUntilStable` is interpreted as \"Shiny must be in the 'idle' state for at least 200ms\"\n//   if shiny decides to become 'idle', then immediately become 'busy', `waitUntilIdle` should NOT be called.\nfunction waitUntilStable(callback) {\n  waitUntilIdleFor(200)(callback);\n}\n\nfunction hasOverlay() {\n  return $(\"#shiny-disconnected-overlay\").length > 0;\n}\n\nexport {\n  isIdle,\n  isBusy,\n  hasOverlay,\n  waitUntilIdleFor,\n  waitUntilIdle,\n  waitUntilStable,\n};\n","import { $ } from \"../globals\";\n\nfunction click(id: string) {\n  $(`#${id}`).click();\n}\n\nexport { click };\n","import { $ } from \"../globals\";\n\nfunction clickOption(id: string, value: string) {\n  $(`#${id} input[value='${value}']`).click();\n}\n\nfunction currentOption(id: string) {\n  return $(`#${id} input:checked`).attr(\"value\");\n}\n\nexport { clickOption, currentOption };\n","import { $ } from \"../globals\";\n\nfunction click(id: string, callback: (error, value) => void) {\n  const href = $(\"#\" + id).attr(\"href\");\n\n  $.get({\n    url: href,\n    success: (value) => {\n      callback(null, value);\n    },\n  }).fail((req, textStatus, errorThrown) => {\n    callback({ req, textStatus, errorThrown }, null);\n  });\n}\n\nexport { click };\n","import { $ } from \"../globals\";\n\nfunction click(id: string) {\n  $(`#${id}`).click();\n}\n\nfunction isChecked(id: string) {\n  return $(`#${id}:checked`).length > 0;\n}\n\nfunction label(id: string) {\n  return $(\"#summary\")\n    .parent()\n    .text()\n    .trim();\n}\n\nexport { click, isChecked, label };\n","import { $ } from \"../globals\";\n\nfunction data(id) {\n  const img = $(`#${id} img`).get(0) as CanvasImageSource;\n  const width = img.width as number;\n  const height = img.height as number;\n  const canvas = document.createElement(\"canvas\");\n\n  canvas.width = width;\n  canvas.height = height;\n  const context = canvas.getContext(\"2d\");\n\n  context.drawImage(img, 0, 0, width, height);\n\n  const imageData = context.getImageData(0, 0, width, height);\n\n  return imageData.data;\n}\n\nexport { data };\n","function escape(str, forR = false) {\n  let ret = str.replace(/[^\\0-~]/g, function(ch) {\n    return \"\\\\u\" + (\"000\" + ch.charCodeAt().toString(16)).slice(-4);\n  });\n\n  if (forR) {\n    // make all back slashes double back slashes\n    ret = ret.replace(/\\\\u/g, \"\\\\\\\\u\");\n  }\n\n  return ret;\n}\n\nexport { escape };\n","import { $ } from \"../globals\";\n\nfunction label(id: string) {\n  return $(`label[for=\"${id}\"]`)\n    .text()\n    .trim();\n}\n\nfunction currentOption(id: string) {\n  return $(`#${id}`).val();\n}\n\nexport { label, currentOption };\n","import * as selectize from \"./selectize\";\nimport * as assert from \"./assert\";\nimport * as shiny from \"./shiny\";\nimport * as button from \"./button\";\nimport * as radio from \"./radio\";\nimport * as download from \"./download\";\nimport * as checkbox from \"./checkbox\";\nimport * as image from \"./image\";\nimport * as unicode from \"./unicode\";\nimport * as input from \"./input\";\n\nconst methods = {\n  assert: assert,\n  selectize: selectize,\n  shiny: shiny,\n  button: button,\n  radio: radio,\n  download: download,\n  checkbox: checkbox,\n  image: image,\n  unicode: unicode,\n  input: input,\n};\n\nexport { methods };\n","import { Shiny, $ } from \"./globals\";\nimport { methods } from \"./methods\";\n\ninterface ResolveFnType {\n  (value?: unknown): void;\n}\ninterface AddFnType {\n  (resolve?: ResolveFnType, value?: unknown): void;\n}\n\nconst assertFunction = methods.assert.isFunction;\n\nclass Jster {\n  timeout: number;\n  fns: Array<{ fn: Function; timeout: number }>;\n  p: null | Promise<unknown>;\n  private hasCalled: boolean;\n\n  static selectize = methods.selectize;\n  static assert = methods.assert;\n  static shiny = methods.shiny;\n  static button = methods.button;\n  static radio = methods.radio;\n  static download = methods.download;\n  static checkbox = methods.checkbox;\n  static image = methods.image;\n  static unicode = methods.unicode;\n  static input = methods.input;\n\n  constructor(timeout: number) {\n    this.hasCalled = false;\n    this.timeout = timeout;\n    this.fns = [];\n    this.p = new Promise((resolve) => {\n      resolve(true);\n    });\n  }\n\n  private setProgress(color: string, txt: string): void {\n    this.setProgressText(txt);\n    this.setProgressColor(color);\n  }\n\n  private setProgressText(txt: string): void {\n    if ($) {\n      $(\"#shinyjster_progress\").text(txt);\n    }\n  }\n\n  private setProgressColor(color: string): void {\n    switch (color) {\n      case \"red\": {\n        color = \"rgb(90%, 54%, 59.4%)\";\n        break;\n      }\n      case \"yellow\": {\n        color = \"rgb(90%, 86.4%, 54%)\";\n        break;\n      }\n      case \"green\": {\n        color = \"rgb(55.8%, 90%, 54%)\";\n        break;\n      }\n      default: {\n        // color = color\n      }\n    }\n    if ($) {\n      $(\"#shinyjster_progress\").css(\"background-color\", color);\n    }\n  }\n\n  add(fn: AddFnType, timeout: number = this.timeout): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    this.setProgress(\"green\", \"shinyjster - Adding tests!\");\n\n    let addFn = fn;\n\n    if (fn.length == 0) {\n      // if no arguments are supplied in the added function,\n      //   * assume it is a sync function\n      //   * If it returns anything, pass it along to the next function\n      //   * Since 'fn' has no 'value' arg, no value will be passed into 'fn'\n      addFn = function(done) {\n        done(fn());\n      };\n    }\n\n    this.fns.push({\n      fn: addFn,\n      timeout: timeout,\n    });\n  }\n\n  setupPromises(): Promise<unknown> {\n    this.setProgress(\"yellow\", \"shinyjster - Running tests!\");\n\n    // for each fn\n    this.fns.forEach(({ fn, timeout }, idx, fns) => {\n      assertFunction(fn);\n\n      this.p = this.p\n        // delay a little bit\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (waiting)`\n          );\n          return new Promise((resolve) => {\n            setTimeout(function() {\n              resolve(value);\n            }, timeout);\n          });\n        })\n        // call the fn itself\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (running)`\n          );\n          return new Promise((resolve) => {\n            fn(resolve, value);\n          });\n        });\n    });\n\n    return this.p;\n  }\n\n  private initSetInputValue(setInputValue) {\n    if (!setInputValue) {\n      setInputValue = Shiny.setInputValue;\n    }\n    if (typeof setInputValue !== \"function\") {\n      throw \"`setInputValue` is not a function.\";\n    }\n    return setInputValue;\n  }\n\n  test(setInputValue): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    if (this.fns.length === 0) {\n      throw \"`this.test()` requires functions to be `this.add()`ed before executing the test\";\n    }\n    // prevent bad testing from occuring\n    this.hasCalled = true;\n\n    this.setupPromises().then(\n      (value) => {\n        this.setProgress(\n          \"green\",\n          `shinyjster - Progress: ${this.fns.length}/${this.fns.length} (done!)`\n        );\n\n        setInputValue = this.initSetInputValue(setInputValue);\n        // send success to shiny\n        setInputValue(\"jster_done\", {\n          type: \"success\",\n          length: this.fns.length,\n          value: value,\n        });\n      },\n      (error) => {\n        // print error to progress area\n        if ($) {\n          this.setProgress(\n            \"red\",\n            `${$(\"#shinyjster_progress\").text()} - Error found: ${error}`\n          );\n        }\n\n        // send error to shiny\n        setInputValue = this.initSetInputValue(setInputValue);\n        setInputValue(\"jster_done\", {\n          type: \"error\",\n          length: this.fns.length,\n          error: error,\n        });\n\n        // display error in console\n        setTimeout(function() {\n          throw error;\n        }, 0);\n      }\n    );\n  }\n\n  wait(ms) {\n    this.add((done) => {\n      setTimeout(done, ms);\n    });\n  }\n\n  static getParameterByName(name: string, url: string): string {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\\\[\\\\]]/g, \"\\\\\\\\$&\");\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n\n    if (!results) return null;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\\\+/g, \" \"));\n  }\n}\n\nfunction jster(timeout = 10): Jster {\n  return new Jster(timeout);\n}\n\nexport { Jster, jster };\n","import { Shiny } from \"./globals\";\n\nfunction initJsterHooks(): void {\n  // use event.target to obtain the output element\n  Shiny.addCustomMessageHandler(\"shinyjster_msg_close_window\", function(\n    canClose\n  ) {\n    if (!canClose) return;\n\n    setTimeout(() => {\n      console.log(\"shinyjster: - closing window!\");\n      window.close();\n    }, 500);\n    Shiny.setInputValue(\"jster_closing_window\", \"closing\");\n  });\n}\n\nexport { initJsterHooks };\n","// import \"core-js/stable\";\n\nimport { jster, Jster } from \"./jster\";\nimport { initJsterHooks } from \"./shiny\";\n\nwindow.jster = jster;\nwindow.Jster = Jster;\n\ninitJsterHooks();\n"]}