{"version":3,"sources":["globals.ts","jster.ts","shiny.ts","index.ts"],"names":[],"mappings":"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","file":"shinyjster.js","sourceRoot":"../../../srcjs","sourcesContent":["import { Jster, jster } from \"./jster\";\n\ninterface ShinyType {\n  setInputValue: (key: string, value: string | Record<string, unknown>) => void;\n  addCustomMessageHandler: (\n    key: string,\n    fn: (val?: string | number) => void\n  ) => void;\n}\n\ndeclare global {\n  interface Window {\n    Shiny: ShinyType;\n    jQuery: JQueryStatic;\n    Jster: Jster;\n    jster: (timeout: number) => void;\n  }\n}\n\nconst Shiny: ShinyType = window.Shiny;\n\nconst jQuery: JQueryStatic = window.jQuery;\n\nexport { Shiny, jQuery, jQuery as $ };\n","import { Shiny, $ } from \"./globals\";\n\ninterface ResolveFnType {\n  (value?: unknown): void;\n}\ninterface AddFnType {\n  (resolve: ResolveFnType, value?: unknown): void;\n}\n\nclass Jster {\n  timeout: number;\n  fns: Array<{ fn: Function; timeout: number }>;\n  p: null | Promise<unknown>;\n  private hasCalled: boolean;\n\n  constructor(timeout: number) {\n    this.hasCalled = false;\n    this.timeout = timeout;\n    this.fns = [];\n    this.p = new Promise((resolve) => {\n      resolve(true);\n    });\n  }\n\n  private setProgress(color: string, txt: string): void {\n    this.setProgressText(txt);\n    this.setProgressColor(color);\n  }\n\n  private setProgressText(txt: string): void {\n    if ($) {\n      $(\"#shinyjster_progress\").text(txt);\n    }\n  }\n\n  private setProgressColor(color: string): void {\n    switch (color) {\n      case \"red\": {\n        color = \"rgb(90%, 54%, 59.4%)\";\n        break;\n      }\n      case \"yellow\": {\n        color = \"rgb(90%, 86.4%, 54%)\";\n        break;\n      }\n      case \"green\": {\n        color = \"rgb(55.8%, 90%, 54%)\";\n        break;\n      }\n      default: {\n        // color = color\n      }\n    }\n    if ($) {\n      $(\"#shinyjster_progress\").css(\"background-color\", color);\n    }\n  }\n\n  add(fn: AddFnType, timeout: number = this.timeout): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    this.setProgress(\"green\", \"shinyjster - Adding tests!\");\n    this.fns.push({\n      fn: fn,\n      timeout: timeout,\n    });\n  }\n\n  setupPromises(): Promise<unknown> {\n    this.setProgress(\"yellow\", \"shinyjster - Running tests!\");\n\n    // for each fn\n    this.fns.forEach(({ fn, timeout }, idx, fns) => {\n      this.p = this.p\n        // delay a little bit\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (waiting)`\n          );\n          return new Promise((resolve) => {\n            setTimeout(function() {\n              resolve(value);\n            }, timeout);\n          });\n        })\n        // call the fn itself\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (running)`\n          );\n          return new Promise((resolve) => {\n            fn(resolve, value);\n          });\n        });\n    });\n\n    return this.p;\n  }\n\n  test(setInputValue = Shiny.setInputValue): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    if (this.fns.length === 0) {\n      throw \"`this.test()` requires functions to be `this.add()`ed before executing the test\";\n    }\n    // prevent bad testing from occuring\n    this.hasCalled = true;\n\n    this.setupPromises().then(\n      (value) => {\n        this.setProgress(\n          \"green\",\n          `shinyjster - Progress: ${this.fns.length}/${this.fns.length} (done!)`\n        );\n\n        // send success to shiny\n        setInputValue(\"jster_done\", {\n          type: \"success\",\n          length: this.fns.length,\n          value: value,\n        });\n      },\n      (error) => {\n        // print error to progress area\n        if ($) {\n          this.setProgress(\n            \"red\",\n            `${$(\"#shinyjster_progress\").text()} - Error found: ${error}`\n          );\n        }\n\n        // send error to shiny\n        setInputValue(\"jster_done\", {\n          type: \"error\",\n          length: this.fns.length,\n          error: error,\n        });\n\n        // display error in console\n        setTimeout(function() {\n          throw error;\n        }, 0);\n      }\n    );\n  }\n\n  static getParameterByName(name: string, url: string): string {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\\\[\\\\]]/g, '\\\\\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\\\+/g, ' '));\n  }\n}\n\nfunction jster(timeout = 250): Jster {\n  return new Jster(timeout);\n}\n\nexport { Jster, jster };\n","import { Shiny } from \"./globals\";\n\nfunction initJsterHooks(): void {\n  // use event.target to obtain the output element\n  Shiny.addCustomMessageHandler(\"shinyjster_msg_close_window\", function(\n    canClose\n  ) {\n    if (!canClose) return;\n\n    setTimeout(() => {\n      console.log(\"shinyjster: - closing window!\");\n      window.close();\n    }, 500);\n    Shiny.setInputValue(\"jster_closing_window\", \"closing\");\n  });\n}\n\nexport { initJsterHooks };\n","// import \"babel-polyfill\";\n\nimport { jster, Jster } from \"./jster\";\nimport { initJsterHooks } from \"./shiny\";\n\nwindow.jster = jster;\nwindow.Jster = Jster;\n\ninitJsterHooks();\n"]}