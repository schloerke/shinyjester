{"version":3,"sources":["globals.ts","methods/selectize.ts","methods/assert.ts","methods/shiny.ts","methods/button.ts","methods/radio.ts","methods/index.ts","jster.ts","shiny.ts","index.ts"],"names":[],"mappings":"cSAA;;;ATmBA,IAAM,KAAK,GAAc,MAAM,CAAC,KAAhC;AAIS,ASrBT,AFFA,ALAA,AEAA,ACAA,AJAA,AEAA,AKAA,ICEA,AFFA,AHAA,ACAA,AJAA,AEAA,AKAA,GRuBS,CAAA,CEvBA,EOET,ETqBS,AOvBT,AHAA,ACAA,AJAA,AEAA,AKAA,CCEA,ETqBS,AOvBT,AHAA,ACAA,AJAA,AEAA,AKAA,GNAA,CAAoB,CFuBX,ASrBT,APFA,COEA,CFFA,ALA0B,AEA1B,ACAA,AJAA,AEAA,AKAA,CDAA,AHAA,ACAA,AJAA,AEAA,AKAA,OCEA,CAAA,GFFA,ACAA,CDAA,AHAA,ACAA,AJAA,AEAA,AKAA,CJAA,ACAA,AJAA,AEAA;AHqBA,AEpBE,IFoBI,KEpBG,CFoBG,GAAiB,AEpBhB,CAAC,KFoBqB,CAAC,GEpB3B,CAAe,CAAf,CFoBT,CEpB2B,IAAlB,EAAwB,IAAxB,CAAP;AFsBc,ASpBhB,AFFA,ALCC,AEAD,ACAA,AJAA,AEAA,AKAA,ICCA,AFFA,GPsBgB,CAAA,CIrBP,ACAA,AJAA,AEAA,AKAA,ECCT,EFFA,CPsBgB,ASpBhB,ALDA,AHAA,CGAe,AHAA,AEAf,CIDA,AFCA,CLqBgB,AIrBhB,ACAiB,AJAjB,CEAe,CCAU,ACAzB,AJAyB,EQCzB,AJD2B,CIC3B,CToBgB,AOtBhB,ACCA,CDDA,ECCuB,KCCvB,CAAA,GFFA,CAAA;APsBkC,AIpBhC,ACAA,AJAA,AEAA,AKAA,EJAA,AHAA,IEAI,CHoB4B,AGpB3B,CHoB2B,CAAA,AKpBzB,EDAP,AHAA,CDoBgC,AIpBhC,AHAA,CGAA,AHAA,CGAE,AHAA,EEAG,CAAA,CHoB2B,AKpBzB,AFAP,CEAO,CDAD,ACAC,AJAD,AEAE,CEAC,CDAT,AHAA,EGAY,AHCT,GIDU,EDAb,ACAO,EACJ,CJDH,GAEG,IIFI,EJAP,CIEG,AJAO,MIFH,CAEG,aJFV,EAGG,IAHH,CIAO,AJGC,EIAL,IAHI,CAGC,WJHR,EAIG,KAJH,WIAO,EAIJ,QAJI,EAAP;AIEF,AFKA,ALqBmC,AE3BlC,ACIA,AJAA,AEJG,AKAF,EAAA,EDMI,EELA,CAAC,AP0B4B,CAAA,GC3BxB,AKAT,CCCF,ADDE,GCCa,CNDX,CKAF,CDMkB,ALqBe,AM3B3B,GDMe,ALqBY,CO1BpB,CAAA,KAAf,EFKuB,CAAA,ALqBY,OKrBZ,CAAQ,ECN7B,CAA8B,GDMT,CAAe,UAAtC,eCNE,EAA6D,UAC3D,QAD2D,EACnD;ACCZ,ANDG,AKEC,MCDE,CAAC,CDCC,CAAC,GCDT,GAAe,EDCX,EAAe,GCDJ,CAAA,KAAf;AAEA,AFIA,ALRA,AEES,ACYA,AJ0CA,AOnDL,IDGJ,ACHI,GCDJ,ALFS,ACYA,AJ0CA,CQpDT,ALFS,ACYA,AJ0CA,CMhDT,ALRS,IEEA,AHsDA,COnDK,CHSL,AGTM,CNLf,AEES,AHsDA,CCxDQ,CAAjB,AGcS,EHdgB,CAAzB,AEES,AHsDA,CQpDT,CPJ+B,EGctB,EGTM;ADGf,ALPE,ACCA,AKII,MNLE,AMKF,GLJG,CDDG,GAAG,AMKF,CAAC,GAAR,CLJG,AKIS,CLJT,CAAA,CAAE,EDDc,CAAC,CAAD,CAAvB,CCCO,EACJ,KADI,GAEJ,QAFI,CAEK,GKER,SLJG,CAAP;AIMF,ALNE,AGIF,AJAA,AEDC,AKEK,MNLE,AMKF,GHDG,AJAA,CCJG,EKMZ,ACDY,CNLG,AMKF,GPDb,CAAiB,COCX,CPDN,CIAA,CAAqB,AJAM,ECJF,AGIzB,CHJ0B,CAAD,AGIQ,CHJ/B,IGIF,EAA8C;AEc5C,AFbA,AJAA,AOCG,EHDH,GGFY,EAGP,EPDE,COFK,CDeZ,AFbA,AGFE,CHEF,CAAA,CAAE,EEaF,CAAY,CNbL,CAAA,CIAD,AJAC,CAAE,CIAP,EEaF,CFbQ,CEamB,CNbd,EAAN,EACJ,QADI,EIAL,CJEC,EIFsB,IJAlB,CIAL,AJEQ,GIFoB,IAA9B,EAAoC,KAApC,MJAO,EAGJ,IAHI,CAGC,6BAHD,EAIJ,QAJI,EAAP;AMcE,ALjBF,AIRF,ADYC,AJIA,AEWuB,AKdpB,IFbJ,AEaI,ENLE,CCmBkB,CAAA,CIFf,CLjBC,GIRV,AEaI,CLcoB,AKdpB,CNLW,CIRf,CH2BwB,CIFpB,CLjBF,AMKE,CAAM,CDYW,ALjBA,ECmBG,GIFpB,EDzBJ,CAAA,IEaI,CAAoB,EFbxB,CAAA,aAAA,CAAA,CAAA,IEaI,EAA4C,SAA5C;ADaA,ALjBA,AMKD,GAVD,CNKE,KKiBK,ELjBE,CAAC,GAAR,CKiBA,ALjBY,GKiBG,ELjBf,EAAmB,CAAnB,EKiBA;AACA,ALjBA,AITJ,ADiBkB,AJ0CM,AEjDxB,AKIC,INLG,AITJ,GDiBkB,AJ0CM,CI1CN,AJ0CM,CMjCf,AJhBA,CGVT,CJSW,CKiBP,ALjBQ,CITZ,EC0Be,ALjBX,ADkDoB,CClDR,CKiBZ,CNiCoB,CI1CN,EHRd,CGQc,AFPlB,CDDuB,ACCA,CDDnB,CITJ,AL2DwB,CK3DxB,KHUA,EGVA,ADiBkB,AFPe,CGVjC,MHUA,EAA6C,EGV7C,CAAA,CAAA;AC2BI,ALjBA,ACA6B,MAAA,GIiBxB,CAAL,ALjBM,GKiBG,AJjBoB,IIiBhB,CJjBgB,KAAA,CIiBpB,AJjBoB,CIiBR,CJjBQ,IDA7B,KKiBsB,OAAD,EAAQ;AAC3B,ALjBH,AIVH,ADYA,AJIA,AEPiC,AKMxB,IFfT,AHSiC,EIkB3B,CCZG,CAAA,CFfT,ADYS,AJIA,EEPwB,CGTjC,CC2Ba,CAAC,AJlBmB,EAAA,EIkBpB,CAAP,CNXN,CAAqB,CIJrB,AGGS,CHHc,AJIvB,CKhBA,CAAA,ADYA,AJIiC,AODxB,EHHwB,CJIjC,EAA4C,EKhB5C,CAAA,MEeS,GFfT,CAAA,CAAA;AC4BK,AFfH,AJIA,AER2C,KIiBhC,CAAT,ANTI,GIJC,AJIE,GAAG,MIJL,CAAA,AJIY,CIJZ,AJIa,CIJX,CJIU,CAAP,CAAY,GIJX,AJID,CAAgB,CIJnB,EJIG,CIJG,AJIf,gBIJO,EAA0B,IAA1B,CAA+B,OAA/B,CAAP;AEgBC,ALlBD,AIVF,ADaC,ICbD,KJUS,CIVT,GJUE,AIVF,YAAA,CAAA,OAAA,CAAA,UAAA,CAAA,CAAA;AJWC,ADOC,AETA,MFSI,AETE,IAAI,GAAG,EFST,CAAA,CAAA,CAAE,GAAF,CETE,CFSK,GETE,GAAA,EFST,CAAgB,UAAhB,CAAJ,EAAiC;AMYzB,AD7BV,ADc+B,AJI3B,AETA,EIoBM,ED7BV,ALkBI,GMWM,AFfqB,CEerB,AFfqB,AFLvB,CGTR,GAAA,CLkBI,CAAA,AETU,CFSV,CAAE,AETF,CIoBM,CAAA,AJpBQ,CFSd,EIJ2B,AJKxB,GKnBP,ADc+B,CCd/B,ALkBI,CACQ,GMUF,GAAR,AD7BF,CAAA,ELkBI,EIJ2B,AJMxB,KMSe,AD7BtB,ALkBI,CKlBJ,CAAA,GC6BE,EAAmC,GAAnC,EAA8C;AAC5C,ALHK,ADNN,AEXG,GFOJ,GEPI,CDiBG,CAAA,CKGA,ANTA,MCMA,CCjBO,CAAC,CDiBR,GCjBO,EAAO,CIoBnB,CAAqB,ALHhB,GKGL,EJpBY,CAAV;AIqBF,AD7BJ,ALoBI,AEXC,IGTC,ALoBF,CEbA,EFaG,CAAC,CMSC,ED7BI,AHSF,EFWP,CKpBY,WC6BZ,CAAsB,KAAtB;AACD,ALpBH,AITE,ALoBC,AEXG,EGTJ,CC0BQ,GJjBJ,EGTE,CJSC,CITC,IHSI,CDAd,CAAgB,AIVA,CJUhB,EAAsB;AACpB,AITA,ALoBD,AEXI,EGTH,OJSO,EITE,EAAE,GJSG,CAAC,CAAD,EAAI,EIXJ,EJWA,CAAd;AKqBQ,ALpBT,AITC,AHSC,EIoBO,AD7BR,CHGA,II0BQ,AD7BH,CC6BG,CD7BD,KAHO,GCgCN,CAAA,eAAA,GAAR,UAAwB,GAAxB,EAAmC;AACjC,AD7BF,ALkD+B,EKlD/B,KLkD+B,CMrBzB,AD7BA,ALkDyB,EKlDvB,MAJM,CCiCR,CAAA,CAAJ,ANqB6B,EMrBtB,CNqBsB,WAAA;AMpB3B,ALTY,AIpBhB,AHSA,EGTA,AHSA,IIoBI,AJpBA,CDWY,AIpBX,CJoBW,CIpBT,KJoBS,CKSZ,CAAA,CAAA,ALTY,CKSV,KLTU,iBKSZ,EAA0B,IAA1B,CAA+B,GAA/B;AACD,ADnCW,ALwBhB,AETC,CGfD,QLwBS,aAAT,CAAuB,EAAvB,EAAiC;AMY9B,ALtBH,AINS,ALiBP,GMOQ,IDxBD,CAAA,CJMA,ADWA,MKjBA,CJMT,CAAiB,CAAjB,AINS,ALiBA,CAAA,CCXc,ADWd,CAAE,IKjBF,ELiBM,EAAN,EACJ,QADI,GAEJ,MAFI,CAEG,oBAFH,EAGJ,IAHI,CAGC,kBAHD,EAIJ,IAJI,EAAP;ACVA,ADeD,AETQ,OAAA,CAAA,CDNA,OAAO,CAAC,CAAD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","file":"shinyjster.js","sourceRoot":"../../../srcjs","sourcesContent":["import { Jster, jster } from \"./jster\";\n\ninterface ShinyType {\n  setInputValue: (key: string, value: string | Record<string, unknown>) => void;\n  addCustomMessageHandler: (\n    key: string,\n    fn: (val?: string | number) => void\n  ) => void;\n}\n\ndeclare global {\n  interface Window {\n    Shiny: ShinyType;\n    jQuery: JQueryStatic;\n    Jster: typeof Jster; // eslint-disable-line no-undef\n    jster: (timeout: number) => void;\n  }\n}\n\nconst Shiny: ShinyType = window.Shiny;\n\nconst jQuery: JQueryStatic = window.jQuery;\n\nexport { Shiny, jQuery, jQuery as $ };\n","import { $ } from \"../globals\";\n\nfunction click(id: string) {\n  $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-input\")\n    .click();\n}\n\nfunction options(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-dropdown-content\")\n    .children();\n}\n\nfunction clickOption(id: string, idx: number) {\n  const opt = options(id).get(idx);\n\n  if ($(opt).hasClass(\"optgroup\")) {\n    $(opt)\n      .find(\".option\")\n      .click();\n  } else {\n    opt.click();\n  }\n}\n\nfunction currentChoice(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-input\")\n    .text();\n}\n\nfunction values(id: string) {\n  return options(id)\n    .map(function() {\n      const selectInfo: { label: string; value: string; group?: string } = {\n        label: \"\",\n        value: \"\",\n      };\n      const jthis = $(this);\n\n      if (jthis.hasClass(\"optgroup\")) {\n        selectInfo.group = jthis.find(\".optgroup-header\").text();\n        selectInfo.label = jthis.find(\".option\").text();\n        selectInfo.value = $(jthis.find(\".option\").get(0)).attr(\"data-value\");\n      } else {\n        selectInfo.label = jthis.text();\n        selectInfo.value = jthis.attr(\"data-value\");\n      }\n      return selectInfo;\n    })\n    .get();\n}\n\nexport { click, values, options, clickOption, currentChoice };\n","function prettyJSON(x: any) {\n  return JSON.stringify(x, null, \"  \");\n}\n\nfunction isEqual(x: any, y: any) {\n  const xStr = prettyJSON(x);\n  const yStr = prettyJSON(y);\n\n  if (xStr !== yStr) {\n    console.log(\"x: \", x);\n    console.log(\"y: \", y);\n    throw \"x does not equal y\";\n  }\n  return true;\n}\n\nfunction isTrue(x: any) {\n  return isEqual(x, true);\n}\n\nfunction isFalse(x: any) {\n  return isEqual(x, false);\n}\n\nfunction isFunction(fn: any) {\n  if (typeof fn !== \"function\") {\n    console.log(\"fn: \", fn);\n    throw \"fn is not a function\"\n  }\n}\n\nexport { isEqual, isTrue, isFalse, prettyJSON, isFunction };\n","import { $ } from \"../globals\";\n\nfunction isBusy(): boolean {\n  if (!$) {\n    return false;\n  }\n  return $(\"html\")\n    .first()\n    .hasClass(\"shiny-busy\");\n}\n\nfunction waitUntilIdle(callback, timeout = 23) {\n  const wait = function() {\n    if (isBusy()) {\n      setTimeout(wait, timeout);\n    } else {\n      callback();\n    }\n  };\n\n  wait();\n}\n\nfunction hasOverlay() {\n  return $(\"#shiny-disconnected-overlay\").length > 0;\n}\n\nexport { waitUntilIdle, isBusy, hasOverlay };\n","import { $ } from \"../globals\";\n\nfunction click(id: string) {\n  $(`#${id}`).click();\n}\n\nexport { click };\n","import { $ } from \"../globals\";\n\nfunction options(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-dropdown-content\")\n    .children();\n}\n\nfunction clickOption(id: string, value: string) {\n  $(`#${id} input[value='${value}']`).click();\n}\n\nfunction currentChoice(id: string) {\n  return $(`#${id} input:checked`).attr(\"value\");\n}\n\nexport { options, clickOption, currentChoice };\n","import * as selectize from \"./selectize\";\nimport * as assert from \"./assert\";\nimport * as shiny from \"./shiny\";\nimport * as button from \"./button\";\nimport * as radio from \"./radio\";\n\nconst methods = {\n  assert: assert,\n  selectize: selectize,\n  shiny: shiny,\n  button: button,\n  radio: radio,\n};\n\nexport { methods };\n","import { Shiny, $ } from \"./globals\";\nimport { methods } from \"./methods\";\n\ninterface ResolveFnType {\n  (value?: unknown): void;\n}\ninterface AddFnType {\n  (resolve: ResolveFnType, value?: unknown): void;\n}\n\nconst assertFunction = methods.assert.isFunction;\n\nclass Jster {\n  timeout: number;\n  fns: Array<{ fn: Function; timeout: number }>;\n  p: null | Promise<unknown>;\n  private hasCalled: boolean;\n\n  static selectize = methods.selectize;\n  static assert = methods.assert;\n  static shiny = methods.shiny;\n  static button = methods.button;\n  static radio = methods.radio;\n\n  constructor(timeout: number) {\n    this.hasCalled = false;\n    this.timeout = timeout;\n    this.fns = [];\n    this.p = new Promise((resolve) => {\n      resolve(true);\n    });\n  }\n\n  private setProgress(color: string, txt: string): void {\n    this.setProgressText(txt);\n    this.setProgressColor(color);\n  }\n\n  private setProgressText(txt: string): void {\n    if ($) {\n      $(\"#shinyjster_progress\").text(txt);\n    }\n  }\n\n  private setProgressColor(color: string): void {\n    switch (color) {\n      case \"red\": {\n        color = \"rgb(90%, 54%, 59.4%)\";\n        break;\n      }\n      case \"yellow\": {\n        color = \"rgb(90%, 86.4%, 54%)\";\n        break;\n      }\n      case \"green\": {\n        color = \"rgb(55.8%, 90%, 54%)\";\n        break;\n      }\n      default: {\n        // color = color\n      }\n    }\n    if ($) {\n      $(\"#shinyjster_progress\").css(\"background-color\", color);\n    }\n  }\n\n  add(fn: AddFnType, timeout: number = this.timeout): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    this.setProgress(\"green\", \"shinyjster - Adding tests!\");\n    this.fns.push({\n      fn: fn,\n      timeout: timeout,\n    });\n  }\n\n  setupPromises(): Promise<unknown> {\n    this.setProgress(\"yellow\", \"shinyjster - Running tests!\");\n\n    // for each fn\n    this.fns.forEach(({ fn, timeout }, idx, fns) => {\n      assertFunction(fn);\n\n      this.p = this.p\n        // delay a little bit\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (waiting)`\n          );\n          return new Promise((resolve) => {\n            setTimeout(function() {\n              resolve(value);\n            }, timeout);\n          });\n        })\n        // call the fn itself\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (running)`\n          );\n          return new Promise((resolve) => {\n            fn(resolve, value);\n          });\n        });\n    });\n\n    return this.p;\n  }\n\n  private initSetInputValue(setInputValue) {\n    if (!setInputValue) {\n      setInputValue = Shiny.setInputValue;\n    }\n    if (typeof setInputValue !== \"function\") {\n      throw \"`setInputValue` is not a function.\";\n    }\n    return setInputValue;\n  }\n\n  test(setInputValue): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    if (this.fns.length === 0) {\n      throw \"`this.test()` requires functions to be `this.add()`ed before executing the test\";\n    }\n    // prevent bad testing from occuring\n    this.hasCalled = true;\n\n    this.setupPromises().then(\n      (value) => {\n        this.setProgress(\n          \"green\",\n          `shinyjster - Progress: ${this.fns.length}/${this.fns.length} (done!)`\n        );\n\n        setInputValue = this.initSetInputValue(setInputValue);\n        // send success to shiny\n        setInputValue(\"jster_done\", {\n          type: \"success\",\n          length: this.fns.length,\n          value: value,\n        });\n      },\n      (error) => {\n        // print error to progress area\n        if ($) {\n          this.setProgress(\n            \"red\",\n            `${$(\"#shinyjster_progress\").text()} - Error found: ${error}`\n          );\n        }\n\n        // send error to shiny\n        setInputValue = this.initSetInputValue(setInputValue);\n        setInputValue(\"jster_done\", {\n          type: \"error\",\n          length: this.fns.length,\n          error: error,\n        });\n\n        // display error in console\n        setTimeout(function() {\n          throw error;\n        }, 0);\n      }\n    );\n  }\n\n  wait(ms) {\n    this.add((done) => {\n      setTimeout(done, ms);\n    });\n  }\n\n  static getParameterByName(name: string, url: string): string {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\\\[\\\\]]/g, \"\\\\\\\\$&\");\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n\n    if (!results) return null;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\\\+/g, \" \"));\n  }\n}\n\nfunction jster(timeout = 250): Jster {\n  return new Jster(timeout);\n}\n\nexport { Jster, jster };\n","import { Shiny } from \"./globals\";\n\nfunction initJsterHooks(): void {\n  // use event.target to obtain the output element\n  Shiny.addCustomMessageHandler(\"shinyjster_msg_close_window\", function(\n    canClose\n  ) {\n    if (!canClose) return;\n\n    setTimeout(() => {\n      console.log(\"shinyjster: - closing window!\");\n      window.close();\n    }, 500);\n    Shiny.setInputValue(\"jster_closing_window\", \"closing\");\n  });\n}\n\nexport { initJsterHooks };\n","// import \"babel-polyfill\";\n\nimport { jster, Jster } from \"./jster\";\nimport { initJsterHooks } from \"./shiny\";\n\nwindow.jster = jster;\nwindow.Jster = Jster;\n\ninitJsterHooks();\n"]}