{"version":3,"sources":["globals.ts","methods/selectize.ts","methods/assert.ts","methods/shiny.ts","methods/button.ts","methods/radio.ts","methods/index.ts","jster.ts","shiny.ts","index.ts"],"names":[],"mappings":"cSAA;;;ATmBA,IAAM,KAAK,GAAc,MAAM,CAAC,KAAhC;AAIS,ASrBT,AFFA,ALAA,AEAA,ACAA,AJAA,AEAA,AKAA,ICEA,AFFA,AHAA,ACAA,AJAA,AEAA,AKAA,GRuBS,CAAA,CEvBA,EOET,ETqBS,AOvBT,AHAA,ACAA,AJAA,AEAA,AKAA,CCEA,ETqBS,AOvBT,AHAA,ACAA,AJAA,AEAA,AKAA,GNAA,CAAoB,CFuBX,ASrBT,APFA,COEA,CFFA,ALA0B,AEA1B,ACAA,AJAA,AEAA,AKAA,CDAA,AHAA,ACAA,AJAA,AEAA,AKAA,OCEA,CAAA,GFFA,ACAA,CDAA,AHAA,ACAA,AJAA,AEAA,AKAA,CJAA,ACAA,AJAA,AEAA;AHqBA,AEpBE,IFoBI,KEpBG,CFoBG,GAAiB,AEpBhB,CAAC,KFoBqB,CAAC,GEpB3B,CAAe,CAAf,CFoBT,CEpB2B,IAAlB,EAAwB,IAAxB,CAAP;AFsBc,ASpBhB,AFFA,ALCC,AEAD,ACAA,AJAA,AEAA,AKAA,ICCA,AFFA,GPsBgB,CAAA,CIrBP,ACAA,AJAA,AEAA,AKAA,ECCT,EFFA,CPsBgB,ASpBhB,ALDA,AHAA,CGAe,AHAA,CMDf,AFCA,CLqBgB,AIrBhB,ACAiB,AJAjB,EGAyB,ACAzB,AJAyB,CEAzB,CMCA,AJD2B,CIC3B,CToBgB,AOtBhB,AJCoB,AKApB,CDDA,ECCuB,KCCvB,CAAA,GFFA,CAAA;APsBkC,AIpBhC,ACAA,AJAA,AEAA,AKAA,EJAA,AHAA,IEAI,CHoB4B,AGpB3B,CHoB2B,CAAA,AKpBzB,EDAP,AHAA,CDoBgC,AIpBhC,AHAA,CGAA,AHAA,CGAE,AHAA,EEAG,CAAA,CHoB2B,AKpBzB,AFAP,CEAO,CDAD,ACAC,AJAD,AEAE,CEAC,CDAT,AHAA,EGAY,AHCT,GIDU,EDAb,ACAO,EACJ,CJDH,GAEG,IIFI,EJAP,CIEG,AJAO,MIFH,CAEG,aJFV,EAGG,IAHH,CIAO,AJGC,EIAL,IAHI,CAGC,WJHR,EAIG,KAJH,WIAO,EAIJ,QAJI,EAAP;AIEF,AFKA,ALcmC,AEpBlC,ACIA,AJAA,AEJG,AKAF,EAAA,EDMF,EELM,CAAC,APmB4B,CAAA,CKdnC,EJNW,AKAT,CCCF,ADDE,GCCa,CNDX,CKAF,CNoBiC,AMpB3B,GNoB2B,COnBpB,CAAA,KAAf,GPmBmC,UMpBjC,CAA8B,6BAA9B,EAA6D,UAC3D,QAD2D,EACnD;ACCZ,AFIA,AJLG,AKEC,MCDE,CAAC,CDCC,CAAC,GCDT,GAAe,EDCX,EAAe,GCDJ,CAAA,KAAf;AAEA,AFEA,ALNA,AEES,ACYA,AJ0CA,AOnDL,IAAA,GCDJ,ALFS,ACYA,AJ0CA,CQpDT,ALFS,ACYA,AJ0CA,CCxDA,GKMT,CHJS,AHsDA,COnDK,CHSL,AGTM,CNLf,AEES,AHsDA,CCxDQ,CAAjB,AGcS,EHdgB,CAAzB,AEES,AHsDA,CQpDT,CPJ+B,EGctB,EGTM;ADab,ALjBA,ACCA,AKII,MNLE,AMKF,GLJG,CDDG,CKiBV,ELjBa,AMKF,CAAC,EDYZ,CAAY,ACZR,CLJG,AKIS,CLJT,CAAA,CAAE,EDDc,CKiBvB,ALjBwB,CAAD,CKiBI,ALjB3B,CCCO,EACJ,KADI,GAEJ,QAFI,CAEK,GKER,SLJG,CAAP;AIiBE,ALjBF,AGIF,AJAA,AEDC,AKEK,MNLE,AMKF,GDYG,AFbA,AJAA,CCJG,EMKA,CNLG,AMKF,GPDb,CAAiB,CMab,ACZE,CPDN,CIAA,CEaqB,AFbA,AJAM,ECJF,AGIzB,CHJ0B,CAAD,AGIQ,CEa7B,ALjBF,IGIF,EAA8C;AEc1C,AFbF,AJAA,AOCG,EHDH,GGFY,EAGP,EDYE,ANbA,COFK,CHEZ,AGFE,CHEF,CAAA,CAAE,EEaA,ENbK,CMaU,ANbV,CIAD,AJAC,CAAE,CIAP,GAAM,CEaN,CNbW,EAAN,EACJ,QADI,EIAL,CJEC,EIFsB,IJAlB,CIAL,AJEQ,GIFoB,IAA9B,EAAoC,KAApC,MJAO,EAGJ,IAHI,CAGC,6BAHD,EAIJ,QAJI,EAAP;AMcE,ALjBF,AIRF,ADYC,AJIA,AEO6C,AKV1C,IFbJ,AEaI,ENLE,CCewC,CAAA,CIErC,CLjBC,EKiBN,CDzBJ,AEaI,CLU0C,AKV1C,CDYW,ALjBA,CIRf,CCyBI,AJF0C,EDf5C,AMKE,CAAM,CNLW,OIRrB,AHuB8C,CGvB9C,IEaI,CAAoB,EFbxB,CAAA,aAAA,CAAA,CAAA,IEaI,EAA4C,SAA5C;ADaA,ALjBA,AMKD,GAVD,CNKE,KKiBK,CAAL,CLjBO,CAAC,CKiBC,ELjBT,CAAY,CKiBC,ILjBb,EAAmB,CKiBV,ALjBT,CKiBqB,UAAC,OAAD,EAAQ;AAC3B,ALjBF,AITJ,ADiBkB,AJ0CM,AEjDxB,AKIC,INLG,AITJ,EC0BM,CFTY,AJ0CM,CI1CN,AJ0CM,CEjDf,CGVT,CJSW,CAAC,CKiBC,AD1Bb,CC0Bc,CLjBV,ADkDoB,CClDR,EKiBH,ANiCW,CMjClB,AFTY,EHRd,ACCJ,CEOkB,AFPI,CDDC,CAAnB,CITJ,AL2DwB,CK3DxB,IHUA,EAA8B,CGV9B,ADiBkB,CCjBlB,UAAA,CAAA,CAAA;AC2BK,ALjBD,ACCF,KIcW,CAAT,AJdI,IDDE,ACCE,GAAG,SAAP,IAAO,GAAA,CDDX;AKkBD,ALjBA,AIVH,ADYA,AJIA,AELI,AKIK,IFfT,GEeS,CLJD,AKIC,CFfT,ADYS,AJIA,GKhBT,OHWmB,CFKnB,CAAqB,AELjB,CECJ,AGGS,CHHc,AJIvB,AELuB,CGXvB,CAAA,ADYA,AJIiC,AODxB,EHHwB,CJIjC,EAA4C,EKhB5C,CAAA,MEeS,GFfT,CAAA,CAAA;ADaE,AJIA,AELI,MFKE,AELF,GECG,AJIE,GAAG,IELE,CAAC,CECR,CAAA,AJIY,CIJZ,AJIa,CIJX,AFDK,CFKK,CAAP,AELS,CFKG,CELV,CAAV,CECS,AJID,CAAgB,CIJnB,EJIG,CIJG,AJIf,gBIJO,EAA0B,IAA1B,CAA+B,OAA/B,CAAP;AEgBQ,ALlBR,AIVF,ADaC,AFDI,EIgBK,ED5BV,CHUI,EIkBM,CAAA,CLlBD,CIVT,CHYW,EDFT,AIVF,IC4BU,CAAA,OD5BV,CAAA,GC4BU,GAAR,CD5BF,CAAA,QC4BsB,ED5BtB,CAAA,CAAA,CC4BE,EAAmC,GAAnC,EAA8C;AAC5C,ALlBH,ADOC,AELI,MFKA,AELA,GIgBG,KJhBK,CFKR,CAAA,CAAA,CAAE,GAAF,EAAO,CMWT,CAAqB,GAArB,GNXE,CAAgB,UAAhB,CAAJ,EAAiC;AMY/B,AD7BJ,ADc+B,AJI3B,AELC,IGbL,ALkBI,GIJ2B,CAAA,CEetB,AD7BT,GAAA,CLkBI,CAAA,CAAA,CAAE,GAAF,EIJ2B,AJKxB,GKnBP,ADc+B,CEe3B,AD7BJ,ALkBI,CMWsB,ANVd,KMUR,CD7BJ,CAAA,ELkBI,EIJ2B,AJMxB,KKpBP,ALkBI,CKlBJ,CAAA;AC8BG,ALVM,ADCN,AEPA,GIaO,ANVR,AETA,IDYO,CAAA,CDCA,MCDA,GAAA,OAAA;AIlBT,ALoBI,IKpBE,ALoBF,GAAG,CAAC,GKpBK,ELoBT,CKpBY;AC8BN,ALpBV,AITE,ALoBC,AEPD,EIgBQ,AD7BR,AHaA,IAAI,CIgBI,CAAA,AD7BF,CJSC,CITC,KJSV,CAAgB,AIVA,CC8BN,ALpBV,CKoBU,CLpBY,cKoBZ,GAAR,UAAwB,GAAxB,EAAmC;AACjC,ALpBF,AITA,ALoBD,AEPA,EGbC,MC6BM,CLpBC,EITE,EAAE,GJSG,CKoBR,ALpBS,CKoBT,ALpBQ,CKoBZ,CLpBgB,CKoBT,CD/BK,EJWA,CAAd;AKqBI,ALpBL,AITC,EAAA,IC6BI,CD7BC,EAAE,KAHO,CCgCV,CAAA,CAAA,CAAE,sBAAF,EAA0B,IAA1B,CAA+B,GAA/B;AACD,AD7BH,ALkD+B,AErCR,EGbvB,KLkD+B,AErCR,CGbjB,ALkDyB,AErCR,EGbf,EHae,GAAA,CGjBT,GLsDiB,GAAA,KErCR,MFqCQ;AMpB9B,ALhBe,AIbhB,EAAA,CCyBQ,ILZQ,AIbX,CJaW,CIbT,KJaS,GAAA,MAAA;AIlBF,ALwBhB,CKxBA,QLwBS,aAAT,CAAuB,EAAvB,EAAiC;AMYvB,ALtBV,AINS,ALiBP,EMWQ,KAAA,AD5BD,CC4BC,AD5BD,CJMA,ADWA,MKjBA,CJMT,CKsBU,ALtBO,CKsBP,ALtBV,AINS,ALiBA,CAAA,CCXc,ADWd,CAAE,IKjBF,ELiBM,EAAN,EACJ,GMUK,GAAR,ENXO,GAEJ,KMSsB,CNXlB,CAEG,GMSV,EAAsC,eNX/B,EAGJ,IAHI,CAGC,kBAHD,EAIJ,IAJI,EAAP;AMYE,ALtBF,ADeD,SCfQ,GKsBG,ILtBI,CKsBZ,ALtBa,CAAD,EAAI,IAAJ,CAAd;AKuBI,ALtBL,WKsBU,KAAL;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","file":"shinyjster.js","sourceRoot":"../../../srcjs","sourcesContent":["import { Jster, jster } from \"./jster\";\n\ninterface ShinyType {\n  setInputValue: (key: string, value: string | Record<string, unknown>) => void;\n  addCustomMessageHandler: (\n    key: string,\n    fn: (val?: string | number) => void\n  ) => void;\n}\n\ndeclare global {\n  interface Window {\n    Shiny: ShinyType;\n    jQuery: JQueryStatic;\n    Jster: typeof Jster; // eslint-disable-line no-undef\n    jster: (timeout: number) => void;\n  }\n}\n\nconst Shiny: ShinyType = window.Shiny;\n\nconst jQuery: JQueryStatic = window.jQuery;\n\nexport { Shiny, jQuery, jQuery as $ };\n","import { $ } from \"../globals\";\n\nfunction click(id: string) {\n  $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-input\")\n    .click();\n}\n\nfunction options(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-dropdown-content\")\n    .children();\n}\n\nfunction clickOption(id: string, idx: number) {\n  const opt = options(id).get(idx);\n\n  if ($(opt).hasClass(\"optgroup\")) {\n    $(opt)\n      .find(\".option\")\n      .click();\n  } else {\n    opt.click();\n  }\n}\n\nfunction currentChoice(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-input\")\n    .text();\n}\n\nfunction values(id: string) {\n  return options(id)\n    .map(function() {\n      const selectInfo: { label: string; value: string; group?: string } = {\n        label: \"\",\n        value: \"\",\n      };\n      const jthis = $(this);\n\n      if (jthis.hasClass(\"optgroup\")) {\n        selectInfo.group = jthis.find(\".optgroup-header\").text();\n        selectInfo.label = jthis.find(\".option\").text();\n        selectInfo.value = $(jthis.find(\".option\").get(0)).attr(\"data-value\");\n      } else {\n        selectInfo.label = jthis.text();\n        selectInfo.value = jthis.attr(\"data-value\");\n      }\n      return selectInfo;\n    })\n    .get();\n}\n\nexport { click, values, options, clickOption, currentChoice };\n","function prettyJSON(x: any) {\n  return JSON.stringify(x, null, \"  \");\n}\n\nfunction isEqual(x: any, y: any) {\n  const xStr = prettyJSON(x);\n  const yStr = prettyJSON(y);\n\n  if (xStr !== yStr) {\n    console.log(\"x: \", x);\n    console.log(\"y: \", y);\n    throw \"x does not equal y\";\n  }\n  return true;\n}\n\nfunction isTrue(x: any) {\n  return isEqual(x, true);\n}\n\nfunction isFalse(x: any) {\n  return isEqual(x, true);\n}\n\nexport { isEqual, isTrue, isFalse, prettyJSON };\n","import { $ } from \"../globals\";\n\nfunction isShinyBusy(): boolean {\n  if (!$) {\n    return false;\n  }\n  return $(\"html\")\n    .first()\n    .hasClass(\"shiny-busy\");\n}\n\nfunction waitForShiny(callback) {\n  const wait = function() {\n    if (isShinyBusy()) {\n      setTimeout(wait, 25);\n    } else {\n      callback();\n    }\n  };\n\n  wait();\n}\n\nexport { waitForShiny as wait, isShinyBusy as isBusy };\n","import { $ } from \"../globals\";\n\nfunction click(id: string) {\n  $(`#${id}`).click();\n}\n\nexport { click };\n","import { $ } from \"../globals\";\n\nfunction options(id: string) {\n  return $(`#${id}`)\n    .siblings()\n    .filter(\".selectize-control\")\n    .find(\".selectize-dropdown-content\")\n    .children();\n}\n\nfunction clickOption(id: string, value: string) {\n  $(`#${id} input[value='${value}']`).click();\n}\n\nfunction currentChoice(id: string) {\n  return $(`#${id} input:checked`).attr(\"value\");\n}\n\nexport { options, clickOption, currentChoice };\n","import * as selectize from \"./selectize\";\nimport * as assert from \"./assert\";\nimport * as shiny from \"./shiny\";\nimport * as button from \"./button\";\nimport * as radio from \"./radio\";\n\nconst methods = {\n  assert: assert,\n  selectize: selectize,\n  shiny: shiny,\n  button: button,\n  radio: radio,\n};\n\nexport { methods };\n","import { Shiny, $ } from \"./globals\";\nimport { methods } from \"./methods\";\n\ninterface ResolveFnType {\n  (value?: unknown): void;\n}\ninterface AddFnType {\n  (resolve: ResolveFnType, value?: unknown): void;\n}\n\nclass Jster {\n  timeout: number;\n  fns: Array<{ fn: Function; timeout: number }>;\n  p: null | Promise<unknown>;\n  private hasCalled: boolean;\n\n  static selectize = methods.selectize;\n  static assert = methods.assert;\n  static shiny = methods.shiny;\n  static button = methods.button;\n  static radio = methods.radio;\n\n  constructor(timeout: number) {\n    this.hasCalled = false;\n    this.timeout = timeout;\n    this.fns = [];\n    this.p = new Promise((resolve) => {\n      resolve(true);\n    });\n  }\n\n  private setProgress(color: string, txt: string): void {\n    this.setProgressText(txt);\n    this.setProgressColor(color);\n  }\n\n  private setProgressText(txt: string): void {\n    if ($) {\n      $(\"#shinyjster_progress\").text(txt);\n    }\n  }\n\n  private setProgressColor(color: string): void {\n    switch (color) {\n      case \"red\": {\n        color = \"rgb(90%, 54%, 59.4%)\";\n        break;\n      }\n      case \"yellow\": {\n        color = \"rgb(90%, 86.4%, 54%)\";\n        break;\n      }\n      case \"green\": {\n        color = \"rgb(55.8%, 90%, 54%)\";\n        break;\n      }\n      default: {\n        // color = color\n      }\n    }\n    if ($) {\n      $(\"#shinyjster_progress\").css(\"background-color\", color);\n    }\n  }\n\n  add(fn: AddFnType, timeout: number = this.timeout): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    this.setProgress(\"green\", \"shinyjster - Adding tests!\");\n    this.fns.push({\n      fn: fn,\n      timeout: timeout,\n    });\n  }\n\n  setupPromises(): Promise<unknown> {\n    this.setProgress(\"yellow\", \"shinyjster - Running tests!\");\n\n    // for each fn\n    this.fns.forEach(({ fn, timeout }, idx, fns) => {\n      this.p = this.p\n        // delay a little bit\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (waiting)`\n          );\n          return new Promise((resolve) => {\n            setTimeout(function() {\n              resolve(value);\n            }, timeout);\n          });\n        })\n        // call the fn itself\n        .then((value) => {\n          this.setProgress(\n            \"yellow\",\n            `shinyjster - Progress: ${idx + 1}/${fns.length} (running)`\n          );\n          return new Promise((resolve) => {\n            fn(resolve, value);\n          });\n        });\n    });\n\n    return this.p;\n  }\n\n  test(setInputValue = Shiny.setInputValue): void {\n    if (this.hasCalled) {\n      throw \"`this.test()` has already been called\";\n    }\n    if (this.fns.length === 0) {\n      throw \"`this.test()` requires functions to be `this.add()`ed before executing the test\";\n    }\n    // prevent bad testing from occuring\n    this.hasCalled = true;\n\n    this.setupPromises().then(\n      (value) => {\n        this.setProgress(\n          \"green\",\n          `shinyjster - Progress: ${this.fns.length}/${this.fns.length} (done!)`\n        );\n\n        // send success to shiny\n        setInputValue(\"jster_done\", {\n          type: \"success\",\n          length: this.fns.length,\n          value: value,\n        });\n      },\n      (error) => {\n        // print error to progress area\n        if ($) {\n          this.setProgress(\n            \"red\",\n            `${$(\"#shinyjster_progress\").text()} - Error found: ${error}`\n          );\n        }\n\n        // send error to shiny\n        setInputValue(\"jster_done\", {\n          type: \"error\",\n          length: this.fns.length,\n          error: error,\n        });\n\n        // display error in console\n        setTimeout(function() {\n          throw error;\n        }, 0);\n      }\n    );\n  }\n\n  waitFor(ms) {\n    this.add((done) => {\n      setTimeout(done, ms);\n    });\n  }\n  waitForShiny() {\n    this.add((done) => {\n      Jster.shiny.wait(done);\n    });\n  }\n\n  static getParameterByName(name: string, url: string): string {\n    if (!url) url = window.location.href;\n    name = name.replace(/[\\\\[\\\\]]/g, \"\\\\\\\\$&\");\n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n\n    if (!results) return null;\n    if (!results[2]) return \"\";\n    return decodeURIComponent(results[2].replace(/\\\\+/g, \" \"));\n  }\n}\n\nfunction jster(timeout = 250): Jster {\n  return new Jster(timeout);\n}\n\nexport { Jster, jster };\n","import { Shiny } from \"./globals\";\n\nfunction initJsterHooks(): void {\n  // use event.target to obtain the output element\n  Shiny.addCustomMessageHandler(\"shinyjster_msg_close_window\", function(\n    canClose\n  ) {\n    if (!canClose) return;\n\n    setTimeout(() => {\n      console.log(\"shinyjster: - closing window!\");\n      window.close();\n    }, 500);\n    Shiny.setInputValue(\"jster_closing_window\", \"closing\");\n  });\n}\n\nexport { initJsterHooks };\n","// import \"babel-polyfill\";\n\nimport { jster, Jster } from \"./jster\";\nimport { initJsterHooks } from \"./shiny\";\n\nwindow.jster = jster;\nwindow.Jster = Jster;\n\ninitJsterHooks();\n"]}