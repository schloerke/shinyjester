on:
  push:
    branches:
      - master
      - ghactions
  pull_request:
    branches:
      - master
  # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onschedule
  schedule:
    - cron:  '0 0 1,16 * *' # every 1st and 16th of month

name: Chrome

jobs:
  mac:
    name: macOS
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: macOS-latest, r: '3.6'}
    runs-on: ${{ matrix.config.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
    steps:
      - uses: actions/checkout@v1

      - name: Setup Chrome
        run: |
          brew cask info google-chrome
          brew update
          brew ls
          brew cask info google-chrome
          brew cask install google-chrome
          brew cask info google-chrome

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Cache R packages
        if: false
        # if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.ref }}
          restore_keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.ref }}
            ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.base_ref }}

      - name: Install remotes
        run: >
          Rscript
          -e "if (system.file(package = 'remotes') == '') install.packages('remotes')"

      - name: Install dependencies
        run: >
          Rscript
          -e "remotes::install_deps(dependencies = TRUE)"
          -e "remotes::install_cran('renv')"
          -e "lapply(unique(renv::dependencies(system.file('shinyjster', package = 'shinyjster'), quiet = TRUE)$Package), remotes::install_cran)"
          -e "remotes::install_github('rstudio/shiny')"
          -e "remotes::install_local(dependencies = TRUE)"

      - name: Run headless check
        run: Rscript -e "shinyjster::run_headless()"

  linux:
    name: linux
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-16.04, r: '3.6', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
    runs-on: ${{ matrix.config.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
    steps:
      - uses: actions/checkout@v1

      - name: Setup Chrome
        run: |
          which google-chrome

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Cache R packages
        if: false
        # if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.ref }}
          restore_keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.ref }}
            ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.base_ref }}

      - name: Install remotes
        run: >
          Rscript
          -e "if (system.file(package = 'remotes') == '') install.packages('remotes')"
          -e "remotes::install_github('r-hub/sysreqs')"

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: >
          Rscript
          -e "remotes::install_deps(dependencies = TRUE)"
          -e "remotes::install_cran('renv')"
          -e "lapply(unique(renv::dependencies(system.file('shinyjster', package = 'shinyjster'), quiet = TRUE)$Package), remotes::install_cran)"
          -e "remotes::install_github('rstudio/shiny')"
          -e "remotes::install_local(dependencies = TRUE)"

      - name: Run headless check
        run: Rscript -e "shinyjster::run_headless_linux()"
