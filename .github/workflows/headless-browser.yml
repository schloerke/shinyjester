on:
  push:
    branches:
      - master
      - ghactions
  pull_request:
    branches:
      - master
  # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onschedule
  schedule:
    - cron:  '0 0 * * 1' # every monday at midnight

name: Headless Browser

jobs:

  headless:
    name: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: '3.6', cran: "https://cloud.r-project.org"}
        - { os: macOS-latest, r: '3.6'}
        - { os: ubuntu-16.04, r: '3.6', cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest"}
    runs-on: ${{ matrix.config.os }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}
    steps:
      - uses: actions/checkout@v1

      - name: Setup macOS Browsers
        if: runner.os == 'macOS'
        run: |
          brew update
          brew cask install google-chrome
          brew cask info google-chrome
          brew cask install firefox
          brew cask info firefox
      - name: Confirm macOS Browsers
        if: runner.os == 'macOS'
        run: |
          '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' --version
      - name: Confirm Linux Browsers
        if: runner.os == 'Linux'
        run: |
          google-chrome --version
          which firefox
      - name: Confirm Windows Browsers
        if: runner.os == 'Windows'
        shell: bash
        run: |
          'C:\Program Files (x86)\Google\Chrome\Application\chrome.exe' --headless --disable-gpu --dump-dom https://www.google.com/

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.ref }}
          restore_keys: |
            ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.ref }}
            ${{ runner.os }}-r-${{ matrix.config.r }}-${{ github.base_ref }}

      - name: Install remotes
        run: >
          Rscript
          -e "if (system.file(package = 'remotes') == '') install.packages('remotes')"

      - name: Install system dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install shinyjster
        run: >
          Rscript
          -e "remotes::install_deps(dependencies = TRUE)"
          -e "remotes::install_local(dependencies = TRUE, force = TRUE)"
      # - name: Add shinyjster matchers
      #   run: echo "::add-matcher::.github/matchers/shinyjster.json"

      - name: Install app deps
        run: >
          Rscript
          -e "remotes::install_cran('renv')"
          -e "lapply(print(unique(renv::dependencies(system.file('shinyjster', package = 'shinyjster'), quiet = TRUE)[['Package']])), remotes::install_cran)"
      # to avoid odd 'raw' bug
      - name: Install rstudio/shiny
        if: runner.os == 'Linux'
        run: >
          Rscript
          -e "remotes::install_github('rstudio/shiny')"




      - name: Run headless Chrome checks
        if: always()
        shell: bash
        run: >
          Rscript
          -e "shinyjster::run_jster_apps(apps = head(shinyjster:::apps_to_test()), browser = shinyjster::selenium_chrome(headless = TRUE), type = 'serial')"

      - name: Run headless Firefox checks
        if: always()
        shell: bash
        run: >
          Rscript
          -e "shinyjster::run_jster_apps(apps = head(shinyjster:::apps_to_test()), browser = shinyjster::selenium_firefox(headless = TRUE), type = 'serial')"

      - name: Run headless Edge checks
        if: always() && (runner.os == 'Windows' || runner.os == 'macOS')
        shell: bash
        run: >
          Rscript
          -e "shinyjster::run_jster_apps(apps = head(shinyjster:::apps_to_test()), browser = shinyjster::selenium_edge(), type = 'serial')"

      - name: Run headless IE checks
        if: always() && runner.os == 'Windows'
        shell: bash
        run: >
          Rscript
          -e "shinyjster::run_jster_apps(apps = head(shinyjster:::apps_to_test()), browser = shinyjster::selenium_ie(), type = 'serial')"
