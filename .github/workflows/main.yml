# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/development-tools-for-github-actions#set-an-environment-variable-set-env

name: CICD
on:
  - push
jobs:

  "mac-r-cmd-check":
    # if: false
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: Install brew
        run: |-
          /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
      - name: Install R
        run: |-
          brew install r
      - name: R Options
        run: |-
          echo 'MAKE=make -j2' >> ~/.Renviron
          mkdir ~/R_LIB
          echo 'R_LIBS=~/R_LIB' >> ~/.Renviron
          echo 'options(repos = c(CRAN = "https://cloud.r-project.org"))' >> ~/.Rprofile
      - name: Cache R library
        uses: actions/cache@v1
        with:
          path: "~/R_LIB"
          key: ${{ runner.OS }}-library-${{ hashFiles('**/DESCRIPTION') }}
      - name: Install Package Dependencies
        run: |-
          Rscript -e "if(!requireNamespace('remotes', quietly = TRUE)) {install.packages('remotes')}"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
          Rscript -e "remotes::install_cran('devtools')"
      - name: "devtools::check()"
        run: |-
          Rscript -e "devtools::check(error_on = 'note', run_dont_test = TRUE, cran = TRUE, remote = FALSE)"

  "r-cmd-check":
    # if: false
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        container:
          # - "rocker/r-ver:3.5.3"
          - "rocker/verse:latest"
          - "rocker/verse:devel"
      fail-fast: true
    container: ${{ matrix.container }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v1
      - name: R Options
        run: |-
          echo 'MAKE=make -j2' >> ~/.Renviron
          echo 'options(repos = c(CRAN = "https://demo.rstudiopm.com/all/__linux__/bionic/latest"))' > ~/.Rprofile
      - name: Install Package Dependencies
        run: |-
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
          Rscript -e "remotes::install_cran('devtools')"
      - name: "devtools::check()"
        run: |-
          Rscript -e "devtools::check(error_on = 'note', run_dont_test = TRUE, cran = TRUE, remote = FALSE)"
