on:
  push:
    branches:
      - master
      - ghactions
  pull_request:
    branches:
      - master
  # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions#onschedule
  # schedule:
  #   - cron:  '0 0 * * 1' # every monday at midnight
  repository_dispatch:
    types:
      - all
      - check

name: Check

jobs:
  # # added so that the workflow doesn't fail.
  # always_runner:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Always run
  #       run: echo "This job is used to prevent the workflow status from showing as failed when all other jobs are skipped"

  JavaScript:
    runs-on: ubuntu-latest
    name: Typescript

    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.config.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.config.os }}-yarn-

      - name: Install
        run: >
          yarn install --frozen-lockfile

      - name: Lints
        run: >
          yarn check

      - name: Test
        run: >
          yarn test


  R-CMD-check:
    # if: false
    runs-on: ${{ matrix.config.os }}

    name: R ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: windows-latest, r: 'release'}
        # devel has its own issues some times. Removing until it is needed on CRAN
        # - { os: windows-latest, r: 'devel'}
        - { os: macOS-latest, r: 'release'}
        # - { os: macOS-latest, r: 'devel'}
        - { os: ubuntu-18.04, r: 'release', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        # - { os: ubuntu-18.04, r: '3.6', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        # - { os: ubuntu-18.04, r: '3.5', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}
        - { os: ubuntu-18.04, r: '3.4', rspm: "https://packagemanager.rstudio.com/all/__linux__/bionic/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        shell: Rscript {0}
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::pkg_deps("local::.", dependencies = TRUE), ".github/r-depends.rds")

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-2-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ matrix.config.os }}-${{ steps.install-r.outputs.installed-r-version }}-2-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        shell: Rscript {0}
        run: |
          pak::local_system_requirements(execute = TRUE)
          pak::pkg_system_requirements("rcmdcheck", execute = TRUE)


      - name: Install dependencies
        shell: Rscript {0}
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::pkg_install("rcmdcheck")
          pak::pkg_install("future")
          pak::pkg_install("promises")
          pak::pkg_install("magrittr")
          pak::pkg_install("ggplot2")

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
          _R_CHECK_FORCE_SUGGESTS_: ${{ matrix.config.r != '3.3' }}
        shell: Rscript {0}
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")

      - name: Show testthat output
        if: always()
        shell: bash
        run: |
          find check -name 'testthat.Rout*' -exec cat '{}' \; || true

      - name: Headless Check (Setup)
        shell: Rscript {0}
        run: |
          pak::pkg_install(c("future", "promises", "magrittr", "ggplot2"), upgrade = TRUE)
          pak::local_install_dev_deps(upgrade = TRUE)
          pak::local_install()
          shinyjster:::test_jster_internal()
      - name: Headless Check
        timeout-minutes: 45
        shell: Rscript {0}
        run: |
          shinyjster:::test_jster_internal()

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ matrix.config.os }}-r${{ matrix.config.r }}-results
          path: check

      - name: Fix path for Windows caching
        if: runner.os == 'Windows'
        shell: bash
        run: echo "C:/Program Files/Git/usr/bin" >> $GITHUB_PATH
